buildscript {
    ext {
        REPOSITORY_HOME = "http://maven.aliyun.com/nexus/content/groups/public/"
        SpringBootVersion = "2.1.1.RELEASE"
        SpringCloudVersion = 'Greenwich.RC2'
        SpringBootAdminVersion = '2.1.1'
        SrpingSessionDataRedis = "2.1.2.RELEASE"
        LombokVersion = "1.18.4"
    }
    repositories {
        maven { url "${REPOSITORY_HOME}" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath(
            //处理 spring boot 的集成
            "org.springframework.boot:spring-boot-gradle-plugin:${SpringBootVersion}",
            //处理 spring cloud 的集成
            "io.spring.gradle:dependency-management-plugin:1.0.2.RELEASE"
        )
    }
}


plugins {
    id 'java'
    id 'idea'

    /* 这里定义一个检查 dependency 版本的插件 插件！ 调用方法 gradle dependencyUpdates -Drevision=release */
    id 'com.github.ben-manes.versions' version "0.20.0"
    /* 定义结束  */
}

allprojects {
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
}

group 'pers.roamer.spring.cloud'
version '1.0-Greenwich'
sourceCompatibility = 1.8
targetCompatibility = 1.8

allprojects {
    apply plugin: 'java'
    repositories {
        mavenLocal()
        maven { url "${REPOSITORY_HOME}" }
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${SpringCloudVersion}"
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${LombokVersion}"
        compile("org.springframework.boot:spring-boot-starter-logging:${SpringBootVersion}")
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }
}
